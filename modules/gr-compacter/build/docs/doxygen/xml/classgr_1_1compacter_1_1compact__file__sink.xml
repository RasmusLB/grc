<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgr_1_1compacter_1_1compact__file__sink" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>gr::compacter::compact_file_sink</compoundname>
    <basecompoundref prot="public" virt="virtual">sync_block</basecompoundref>
    <basecompoundref prot="public" virt="virtual">file_sink_base</basecompoundref>
    <derivedcompoundref refid="classgr_1_1compacter_1_1compact__file__sink__impl" prot="public" virt="non-virtual">gr::compacter::compact_file_sink_impl</derivedcompoundref>
    <includes refid="compact__file__sink_8h" local="no">compact_file_sink.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgr_1_1compacter_1_1compact__file__sink_1a750ea12411fda0e8400f5c5033f544f5" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classgr_1_1compacter_1_1compact__file__sink" kindref="compound">compact_file_sink</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;compact_file_sink&gt; gr::compacter::compact_file_sink::sptr</definition>
        <argsstring></argsstring>
        <name>sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rlb/grc/modules/gr-compacter/include/compacter/compact_file_sink.h" line="45" column="1" bodyfile="/home/rlb/grc/modules/gr-compacter/include/compacter/compact_file_sink.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgr_1_1compacter_1_1compact__file__sink_1a4b27883b9636e9d605db44bc06b9af6f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgr_1_1compacter_1_1compact__file__sink_1a750ea12411fda0e8400f5c5033f544f5" kindref="member">sptr</ref></type>
        <definition>static sptr gr::compacter::compact_file_sink::make</definition>
        <argsstring>(size_t itemsize, const char *filename, bool append=false)</argsstring>
        <name>make</name>
        <param>
          <type>size_t</type>
          <declname>itemsize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>append</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Return a shared_ptr to a new instance of <ref refid="classgr_1_1compacter_1_1compact__file__sink" kindref="compound">compacter::compact_file_sink</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>To avoid accidental use of raw pointers, <ref refid="classgr_1_1compacter_1_1compact__file__sink" kindref="compound">compacter::compact_file_sink</ref>&apos;s constructor is in a private implementation class. <ref refid="classgr_1_1compacter_1_1compact__file__sink_1a4b27883b9636e9d605db44bc06b9af6f" kindref="member">compacter::compact_file_sink::make</ref> is the public interface for creating new instances.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the file to open and write output to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>append</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, data is appended to the file instead of overwriting the initial content. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rlb/grc/modules/gr-compacter/include/compacter/compact_file_sink.h" line="59" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgr_1_1compacter_1_1compact__file__sink_1ad728e197515647aa2d81889c9a4bf31a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::compacter::compact_file_sink::set_sample_rate</definition>
        <argsstring>(uint64_t sample_rate)=0</argsstring>
        <name>set_sample_rate</name>
        <reimplementedby refid="classgr_1_1compacter_1_1compact__file__sink__impl_1a79a3be11836f7eeebb4bf8ddc620dc41">set_sample_rate</reimplementedby>
        <param>
          <type>uint64_t</type>
          <declname>sample_rate</declname>
        </param>
        <briefdescription>
<para>Set the sample rate. </para>        </briefdescription>
        <detaileddescription>
<para>The sample rate is saved in the file for future use in processing. The sample rate is written to the file before the first measurement is recorded. Therefore, the changing the sample rate will only have effect, when it is done before the file is created. The sample rate is not directly utilized by the module, but for processing purposes, the sample rate should reflect the actual sampling rate used in the system</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sample_rate</parametername>
</parameternamelist>
<parameterdescription>
<para>the sample rate in Hz </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rlb/grc/modules/gr-compacter/include/compacter/compact_file_sink.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1compacter_1_1compact__file__sink_1a5114ce1052773db679246ad9e7880184" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>uint64_t</type>
        <definition>virtual uint64_t gr::compacter::compact_file_sink::sample_rate</definition>
        <argsstring>()=0</argsstring>
        <name>sample_rate</name>
        <reimplementedby refid="classgr_1_1compacter_1_1compact__file__sink__impl_1a8db54a920f5086e788ab34e3448d29b4">sample_rate</reimplementedby>
        <briefdescription>
<para>Returns the sample rate. </para>        </briefdescription>
        <detaileddescription>
<para>The sample rate </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rlb/grc/modules/gr-compacter/include/compacter/compact_file_sink.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1compacter_1_1compact__file__sink_1a702e367b45a8bccdb76007b6dac97b1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::compacter::compact_file_sink::set_fft_size</definition>
        <argsstring>(uint32_t fft_size)=0</argsstring>
        <name>set_fft_size</name>
        <reimplementedby refid="classgr_1_1compacter_1_1compact__file__sink__impl_1ad27911bd720c8f14cbbba14f69b3e4c5">set_fft_size</reimplementedby>
        <param>
          <type>uint32_t</type>
          <declname>fft_size</declname>
        </param>
        <briefdescription>
<para>Set the fft size. </para>        </briefdescription>
        <detaileddescription>
<para>The fft size is saved in the file for future use in processing and used for compacting. The format of the compacted file is dependent on the fft size, thus the value should only be changed before the file has been created.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fft_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the fft size </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rlb/grc/modules/gr-compacter/include/compacter/compact_file_sink.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1compacter_1_1compact__file__sink_1a30e9230d7c2e03b538242a1c05d5cc8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>uint32_t</type>
        <definition>virtual uint32_t gr::compacter::compact_file_sink::fft_size</definition>
        <argsstring>()=0</argsstring>
        <name>fft_size</name>
        <reimplementedby refid="classgr_1_1compacter_1_1compact__file__sink__impl_1ad44c1eecfc913db347222a27bc9cba25">fft_size</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rlb/grc/modules/gr-compacter/include/compacter/compact_file_sink.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1compacter_1_1compact__file__sink_1a085a3c3242c7a9ee7874816a972bcf43" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::compacter::compact_file_sink::set_center_freq</definition>
        <argsstring>(uint64_t center_freq)=0</argsstring>
        <name>set_center_freq</name>
        <reimplementedby refid="classgr_1_1compacter_1_1compact__file__sink__impl_1a644a2776d4c559474c8a73cd55326ad5">set_center_freq</reimplementedby>
        <param>
          <type>uint64_t</type>
          <declname>center_freq</declname>
        </param>
        <briefdescription>
<para>Set the center frequency. </para>        </briefdescription>
        <detaileddescription>
<para>The center frequency is saved in the file for future use in processing. The center frequency is written to the file before the first measurement is recorded. Therefore, changing the center frequency will only have effect, when it is done before the file is created. The center frequency is not directly utilized by the module, but for processing purposes, the center frequency should reflect the actual center frequency used in the system</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>center_freq</parametername>
</parameternamelist>
<parameterdescription>
<para>the center frequency in Hz </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rlb/grc/modules/gr-compacter/include/compacter/compact_file_sink.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1compacter_1_1compact__file__sink_1a54b3d3ba71e2bb56545914e475b2474e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>uint64_t</type>
        <definition>virtual uint64_t gr::compacter::compact_file_sink::center_freq</definition>
        <argsstring>()=0</argsstring>
        <name>center_freq</name>
        <reimplementedby refid="classgr_1_1compacter_1_1compact__file__sink__impl_1ae60c2e4a4bc702a1ebc99b27743ea252">center_freq</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rlb/grc/modules/gr-compacter/include/compacter/compact_file_sink.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1compacter_1_1compact__file__sink_1a672786c8e154505cf663dc35f0878f6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::compacter::compact_file_sink::set_compact_threshold</definition>
        <argsstring>(float compact_threshold)=0</argsstring>
        <name>set_compact_threshold</name>
        <reimplementedby refid="classgr_1_1compacter_1_1compact__file__sink__impl_1ab50c026cd83042ee77b94725788f57c8">set_compact_threshold</reimplementedby>
        <param>
          <type>float</type>
          <declname>compact_threshold</declname>
        </param>
        <briefdescription>
<para>Set the filtering threshold. </para>        </briefdescription>
        <detaileddescription>
<para>The filtering threshold determines which power measurements should be stored. Any values below the threshold are discarded. This is intended to allow disregarding power measurements that fall below the noise floor, and therefore bears no relevant information. The value of the power being filtered is in dB, and dBm if the device is calibrated.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compact_threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>the filtering threshold in dB(m) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rlb/grc/modules/gr-compacter/include/compacter/compact_file_sink.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1compacter_1_1compact__file__sink_1af608ccec78efa7bc9b1c982db54f96ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>float</type>
        <definition>virtual float gr::compacter::compact_file_sink::compact_threshold</definition>
        <argsstring>()=0</argsstring>
        <name>compact_threshold</name>
        <reimplementedby refid="classgr_1_1compacter_1_1compact__file__sink__impl_1abb0a561519af1b9766eb3c87a6c39c8d">compact_threshold</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rlb/grc/modules/gr-compacter/include/compacter/compact_file_sink.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1compacter_1_1compact__file__sink_1a964bd9197bc57a5d4d3e25d953b85cba" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::compacter::compact_file_sink::set_unbuffered</definition>
        <argsstring>(bool unbuffered)=0</argsstring>
        <name>set_unbuffered</name>
        <reimplementedby refid="classgr_1_1compacter_1_1compact__file__sink__impl_1ad6e298b38177a3425635fe6fdcb0c5ba">set_unbuffered</reimplementedby>
        <param>
          <type>bool</type>
          <declname>unbuffered</declname>
        </param>
        <briefdescription>
<para>Disallow buffereing of the value to file. </para>        </briefdescription>
        <detaileddescription>
<para>Since writing to a file has interaction the the parmanent storage on the device. The operating system will by default buffer data for effecient I/O operations Setting unbuffered, enforces the flushing of the file write buffer, after each input cycle.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>center_freq</parametername>
</parameternamelist>
<parameterdescription>
<para>the center frequency in Hz </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rlb/grc/modules/gr-compacter/include/compacter/compact_file_sink.h" line="126" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The compactor is a module created for the purpose of logging power spectrum measurement to a file in a way that minimizes storage usage by exluding certain values. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="0">
        <label>gr::compacter::compact_file_sink</label>
        <link refid="classgr_1_1compacter_1_1compact__file__sink"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>gr::compacter::compact_file_sink_impl</label>
        <link refid="classgr_1_1compacter_1_1compact__file__sink__impl"/>
        <childnode refid="0" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>sync_block</label>
      </node>
      <node id="2">
        <label>blocks::file_sink_base</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>gr::compacter::compact_file_sink</label>
        <link refid="classgr_1_1compacter_1_1compact__file__sink"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>sync_block</label>
      </node>
      <node id="6">
        <label>blocks::file_sink_base</label>
      </node>
    </collaborationgraph>
    <location file="/home/rlb/grc/modules/gr-compacter/include/compacter/compact_file_sink.h" line="43" column="1" bodyfile="/home/rlb/grc/modules/gr-compacter/include/compacter/compact_file_sink.h" bodystart="41" bodyend="127"/>
    <listofallmembers>
      <member refid="classgr_1_1compacter_1_1compact__file__sink_1a54b3d3ba71e2bb56545914e475b2474e" prot="public" virt="pure-virtual"><scope>gr::compacter::compact_file_sink</scope><name>center_freq</name></member>
      <member refid="classgr_1_1compacter_1_1compact__file__sink_1af608ccec78efa7bc9b1c982db54f96ac" prot="public" virt="pure-virtual"><scope>gr::compacter::compact_file_sink</scope><name>compact_threshold</name></member>
      <member refid="classgr_1_1compacter_1_1compact__file__sink_1a30e9230d7c2e03b538242a1c05d5cc8b" prot="public" virt="pure-virtual"><scope>gr::compacter::compact_file_sink</scope><name>fft_size</name></member>
      <member refid="classgr_1_1compacter_1_1compact__file__sink_1a4b27883b9636e9d605db44bc06b9af6f" prot="public" virt="non-virtual"><scope>gr::compacter::compact_file_sink</scope><name>make</name></member>
      <member refid="classgr_1_1compacter_1_1compact__file__sink_1a5114ce1052773db679246ad9e7880184" prot="public" virt="pure-virtual"><scope>gr::compacter::compact_file_sink</scope><name>sample_rate</name></member>
      <member refid="classgr_1_1compacter_1_1compact__file__sink_1a085a3c3242c7a9ee7874816a972bcf43" prot="public" virt="pure-virtual"><scope>gr::compacter::compact_file_sink</scope><name>set_center_freq</name></member>
      <member refid="classgr_1_1compacter_1_1compact__file__sink_1a672786c8e154505cf663dc35f0878f6b" prot="public" virt="pure-virtual"><scope>gr::compacter::compact_file_sink</scope><name>set_compact_threshold</name></member>
      <member refid="classgr_1_1compacter_1_1compact__file__sink_1a702e367b45a8bccdb76007b6dac97b1c" prot="public" virt="pure-virtual"><scope>gr::compacter::compact_file_sink</scope><name>set_fft_size</name></member>
      <member refid="classgr_1_1compacter_1_1compact__file__sink_1ad728e197515647aa2d81889c9a4bf31a" prot="public" virt="pure-virtual"><scope>gr::compacter::compact_file_sink</scope><name>set_sample_rate</name></member>
      <member refid="classgr_1_1compacter_1_1compact__file__sink_1a964bd9197bc57a5d4d3e25d953b85cba" prot="public" virt="pure-virtual"><scope>gr::compacter::compact_file_sink</scope><name>set_unbuffered</name></member>
      <member refid="classgr_1_1compacter_1_1compact__file__sink_1a750ea12411fda0e8400f5c5033f544f5" prot="public" virt="non-virtual"><scope>gr::compacter::compact_file_sink</scope><name>sptr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
